version: '3'

volumes:
  mysql_data:
    driver: local
  mongodb_data:
    driver: local
  data01:
    driver: local

networks:
  winra-external:
    driver: bridge

services:
  nginx: 
    image: nginx:latest
    #build: data/nginx/
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    environment:
      - SERVER_FQDN=${SERVER_FQDN}
    volumes:
      - ./data/nginx/winra.conf.template:/etc/nginx/templates/winra.conf.template
      - ./data/ssl/:/etc/ssl/
      - ./data/nginx/conf/:/etc/conf/
    ports:
      - 443:443
    depends_on:
      - win-ra-keycloak 
    networks:
      - winra-external

  mysql:
    hostname: mysql
    container_name: mysql
    image: mysql:5.7
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql
      - ./data/mysql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root
      #MYSQL_USER: winra
      #MYSQL_PASSWORD: password
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - winra-external
      
  mongodb:
    image : mongo
    container_name: mongodb
    restart: unless-stopped
    environment:
#      - PUID=1000
#      - PGID=1000
      - MONGO_INITDB_ROOT_USERNAME=appuser
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=acme
    volumes:
      - mongodb_data:/data/db
      - ./data/mongodb/001_users.js:/docker-entrypoint-initdb.d/001_users.js:ro
#    entrypoint: ["mongod", "--auth", "--config", "/etc/mongod.conf"]
    ports:
      - 27017:27017
    networks:
      - winra-external
      
  win-ra-keycloak:
    build: data/keycloak/
    hostname: win-ra-keycloak
    container_name: win-ra-keycloak
    restart: unless-stopped
    environment:
      DB_VENDOR: mysql
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_PORT: 3306
      DB_USER: winra
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      PROXY_ADDRESS_FORWARDING: "true"
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the MySQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "connectTimeout=30000"
      KEYCLOAK_IMPORT: "/tmp/import-realm.json -Dkeycloak.profile.feature.upload_scripts=enabled"
    ports:
      - 8080:8080
    volumes:
      - ./data/keycloak/winllc-dev-realm.json:/tmp/import-realm.json
      - ./data/ssl/trust.jks:/opt/jboss/keycloak/standalone/configuration/truststore.jks
      - ./data/keycloak/scipts/:/scripts
    depends_on:
      mysql:
        condition: service_healthy
#      nginx:
#        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      winra-external:
        aliases:
          - win-ra-keycloak 
      
  win-ra-api:
    build: ./pki-ra-api-server
    #image: registry.gitlab.winllc-dev.com/root/pki-registration-authority
    pull_policy: always
    container_name: win-ra-api
    hostname: winraapi
    restart: unless-stopped
    environment:
      - SERVER_FQDN=${SERVER_FQDN}
    ports:
      - 8282:8282
    depends_on:
      mysql:
        condition: service_started
      win-ra-keycloak:
        condition: service_healthy
    volumes:
      - ./data/ssl/:/ssl/
      - ./data/api/application-dev.yml:/application-dev.yml
      - ./data/api/ca-plugins:/ca-plugins
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8282"]
      #test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8282/"]
      #test: curl -m 5 --silent --fail --request GET http://localhost:8080/actuator/health | jq --exit-status -n 'inputs | if has("status") then .status=="UP" else false end' > /dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 15
    networks:
      - winra-external
    
  win-ra-acme:
    build: ./pki-ra-acme-server
    #image: registry.gitlab.winllc-dev.com/root/acme-server
    pull_policy: always
    container_name: win-ra-acme
    restart: unless-stopped
    environment:
      - SERVER_FQDN=${SERVER_FQDN}
    ports:
      - 8181:8181
    volumes:
      - ./data/ssl/:/ssl/
      - ./data/acme/application-dev.properties:/application-dev.properties
    depends_on:
      - mongodb
    networks:
      - winra-external
      
        #  win-ra-est:
        #    build: pki-ra-est-server/jester-winllc-server/
        #    container_name: win-ra-est
        #    restart: unless-stopped
        #    environment:
        #      - SERVER_FQDN=${SERVER_FQDN}
        #    ports:
        #      - 8383:8888
        #    volumes:
        #      - ./data/ssl/:/ssl/
        #      - ./data/est/application-dev.properties:/application-dev.properties
        #    depends_on:
        #      win-ra-api:
        #        condition: service_healthy
        #    networks:
        #      - winra-external
      
        #  win-ra-ui:
        #    image: registry.gitlab.winllc-dev.com/root/pki-ra-ui-3
        #    pull_policy: always
        #    container_name: win-ra-ui
        #    hostname: win-ra-ui
        #    restart: unless-stopped
        #    environment:
        #      PUBLIC_URL: https://${SERVER_FQDN}/ui
        #      REACT_APP_KEYCLOAK_realm: dev
        #      REACT_APP_KEYCLOAK_auth_server_url: https://${SERVER_FQDN}/auth/
        #      REACT_APP_KEYCLOAK_RESOURCE: pki-ra-client-public
        #      REACT_APP_URL_BASENAME: /ui
        #      REACT_APP_SYSTEM_STATUS_URL: https://${SERVER_FQDN}/status/targets
        #      REACT_APP_IDENTITY_MANAGE_URL: https://${SERVER_FQDN}/auth/
        #    ports:
        #      - 8484:80
        #    volumes:
        #      - ./data/ui/env.development:/app/.env.development
        #      - ./data/ui/env.development:/usr/share/nginx/html/.env
        #    depends_on:
        #      - win-ra-api
        #    networks:
        #      - winra-external

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - winra-external
    environment:
      - SERVER_FQDN=${SERVER_FQDN}
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=expand-external-labels
    #  - --storage.tsdb.path=/prometheus
    #  - --web.console.libraries=/usr/share/prometheus/console_libraries
    #  - --web.console.templates=/usr/share/prometheus/consoles
      - --web.external-url=https://${SERVER_FQDN}/status
    #  - --web.route-prefix=/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: elasticsearch
    hostname: elasticsearch
    restart: unless-stopped
    environment:
      discovery.type: single-node
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - data01:/usr/share/elasticsearch/data
    networks:
      - winra-external
